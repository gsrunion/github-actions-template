# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: bootJar
        gradle-version: 7.6.1

#    - name: Set env
#      run: echo "ARTIFACT_NAME=$(ls build/libs/*.jar | cut -c 12-256)" >> $GITHUB_ENV

    - name: Create output directory and store jar
      run: mkdir staging && cp build/libs/*.jar staging

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        path: staging
        #name: ${{ env.ARTIFACT_NAME }}
        name: github-actions-template-${{github.run_number}}-.jar


    - uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{github.run_number}}
        message: "Latest release"
